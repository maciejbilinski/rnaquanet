# RNAQuANet configuration file
name: 'rnaquadataset' # dataset name
tools_path: '/app/tools' # directory with external tools used in preprocessing (RNAgrowth)
verbose: True
data:
  path: '/app/data' # data directory
  # Specifies URLs for raw PDB archive. The archive must be in `.tar.gz` /
  # `.tar.xz` format and must contain exactly three directories:
  # {train_folder}, {val_folder} and {test_folder}, as well as at least one CSV
  # file. You can use a single CSV file for all datasets, or use separate ones
  # for train, val and test datasets.
  # Here you can also configure CSV delimiter character (usually a comma) and
  # column names containing RMSD values and structure filenames.
  download:
    url: 'https://rnasolo.cs.put.poznan.pl/media/rnaqua_structure_dataset.tar.xz' # dataset URL
    archive_ext: 'tar.xz' # archive type: tar.xz/tar.gz
    train_folder: 'train' # train set directory name in the archive
    val_folder: 'val' # validation set directory name in the archive
    test_folder: 'test' # test set directory name in the archive
    train_csv: 'train.csv' # CSV filename containing RMSD labels for train set data
    val_csv: 'val.csv' # CSV filename containing RMSD labels for validation set data
    test_csv: 'test.csv' # CSV filename containing RMSD labels for test set data
    csv_delimiter: ',' # CSV separator (usually a comma)
    csv_rmsd_column_name: 'rmsd' # CSV column name with RMSD (values)
    csv_structure_column_name: 'description' # CSV column name with filenames (keys)
  # Contains URLs to already preprocessed datasets in H5 file format. The files
  # should have .h5 file extension and should contain structures represented by
  # PyTorch Geometric Data objects containing x, edge_index, edge_attr and y.
  download_preprocessed:
    train_url: '' # H5 train set URL
    val_url: '' # H5 validation set URL
    test_url: '' # H5 test set URL
  # Configuration for feature generation. Here you can specify which atom to
  # use for coordinates and spatial distance computations, as well as maximum
  # Euclidean distance in Å (Angstroms) for spatial adjacency (edges).
  features:
    atom_for_distance_calculations: "C1'" # atom used for determining spatial distances and coords (usually C1')
    max_euclidean_distance: '16.0' # maximum distance in Å for spatial adjacency during feature extraction (usually 16.0)
    regenerate_features_when_exists: True # whether to generate feature files again if they already exist
# Neural network configuration. Here you can specify output path as well as
# number of layers, number of attention heads, whether to use batch
# normalization, weight decay, etc.
network:
  model_output_path: '/app/models'
  hidden_dim: 128
  layer_type: 3
  num_of_heads: 1 # number of attention heads in GAT/Transformer layer
  num_of_layers: 4
  num_of_node_features: 99
  batch_norm: False
  gat_dropout: 0.5
  lr: 0.001 # learning rate
  weight_decay: 0.3
  scheduler_step_size: 10
  scheduler_gamma: 0.5
  batch_size: 1000
  num_workers: 1
  shuffle_train: True
  shuffle_val: False
  shuffle_test: False
  max_epochs: 50
